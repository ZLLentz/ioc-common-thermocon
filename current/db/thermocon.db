# Records for THERMOCON.gc AQI
# Macros:
#     DEV - PV basename
#     N   - THERMOCON.gc device index

record(ai, $(DEV):TEMP_RAW_RBV)
{       
        field(DESC, "Raw internal sensor temp")
        field(DTYP, "asynInt32")
        field(INP, "@asyn(THERMOCON$(N)_read_reg,0)UINT16")
        field(VAL, "0")
}
 
record(calc, $(DEV):TEMP_RBV)
{
        field(DESC, "internal sensor temp in C")
        field(INPA, "$(DEV):TEMP_RAW_RBV PP NMS")
        field(SCAN, "2 second")
        field(CALC, "A&32768?-1*((~A) + 1)/100:A/100")
	    field(EGU, "C")
}

record(mbbiDirect, $(DEV):STATUS_RBV)
{       
    	  field(DTYP, "asynUInt32Digital")
        field(INP, "@asynMask(THERMOCON$(N)_read_reg,3,0x0007)UINT16")
        field(SCAN, "Passive")
        field(VAL, "0")
        field(FLNK, "$(DEV):RUN_FLAG_RBV.PROC")
        field(FLNK, "$(DEV):ALARM_FLAG_RBV.PROC")
        field(FLNK, "$(DEV):WARNING_FLAG_RBV.PROC")
}

record(bi, $(DEV):STATUS_RUN_FLAG_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):STATUS_RBV.B0 NPP NMS")
    field(ZNAM, "STOP")
    field(ONAM, "RUN")
}

record(bi, $(DEV):STATUS_ALARM_FLAG_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):STATUS_RBV.B1 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):STATUS_WARNING_FLAG_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):STATUS_RBV.B2 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(mbbiDirect, $(DEV):ALARM_FLAG_1_RBV)
{       
  	    field(DTYP, "asynUInt32Digital")
        field(INP, "@asynMask(THERMOCON$(N)_read_reg,4,0xF80E)UINT16")
        field(SCAN, "Passive")
        field(VAL, "0")
        field(FLNK, "$(DEV):SYSTEM_ERROR_1_RBV.PROC")
        field(FLNK, "$(DEV):SYSTEM_ERROR_2_RBV.PROC")
        field(FLNK, "$(DEV):BACKUP_DATA_ERR_RBV.PROC")
        field(FLNK, "$(DEV):DC_PWR_FAIL_RBV.PROC")
        field(FLNK, "$(DEV):INT_HIGH_TEMP_FAIL_RBV.PROC")
        field(FLNK, "$(DEV):INT_LOW_TEMP_FAIL_RBV.PROC")
        field(FLNK, "$(DEV):THERMOSTAT_RBV.PROC")
        field(FLNK, "$(DEV):ABNORMAL_OUT_RBV.PROC")
}

record(bi, $(DEV):SYSTEM_ERROR_1_RBV)
{
    field(DESC,"something")
    field(INP, "(DEV):ALARM_FLAG_1_RBV.B1 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):SYSTEM_ERROR_2_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):ALARM_FLAG_1_RBV.B2 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):BACKUP_DATA_ERR_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):ALARM_FLAG_1_RBV.B3 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):DC_PWR_FAIL_RBV)
{
    field(DESC,"something")
    field(INP, "(DEV):ALARM_FLAG_1_RBV.B11 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}
record(bi, $(DEV):INT_HIGH_TEMP_FAIL_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):ALARM_FLAG_1.B12 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):INT_LOW_TEMP_FAIL_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):ALARM_FLAG_1.B13 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):THERMOSTAT_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):ALARM_FLAG_1.B14 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):ABNORMAL_OUT_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):ALARM_FLAG_1.B15 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(mbbiDirect, $(DEV):ALARM_FLAG_2_RBV)
{       
   	    field(DTYP, "asynUInt32Digital")
        field(INP, "@asynMask(THERMOCON$(N)_read_reg,5,0x301F)UINT16")
        field(SCAN, "Passive")
        field(VAL, "0")
        field(FLNK, "$(DEV):LOW_FLOW_RBV.PROC")
        field(FLNK, "$(DEV):INT_TEMP_SENS_DISCONNECT_RBV.PROC")
        field(FLNK, "$(DEV):EXT_TEMP_SENS_DISCONNECT_RBV.PROC")
        field(FLNK, "$(DEV):ABNORMAL_AUTO_TUNING_RBV.PROC")
        field(FLNK, "$(DEV):LOW_FLUID_RBV.PROC")
        field(FLNK, "$(DEV):TEMP_UPPER_LIM_RBV.PROC")
        field(FLNK, "$(DEV):TEMP_LOW_LIM_RBV.PROC")
}

record(bi, $(DEV):LOW_FLOW_RBV)
{
    field(DESC,"something")
    field(INP, "(DEV):ALARM_FLAG_2_RBV.B0 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):INT_TEMP_SENS_DISCONNECT_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):ALARM_FLAG_2_RBV.B1 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):EXT_TEMP_SENS_DISCONNECT_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):ALARM_FLAG_2_RBV.B2 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):ABNORMAL_AUTO_TUNING_RBV)
{
    field(DESC,"something")
    field(INP, "(DEV):ALARM_FLAG_2_RBV.B3 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}
record(bi, $(DEV):LOW_FLUID_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):ALARM_FLAG_2_RBV.B4 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):TEMP_UPPER_LIM_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):ALARM_FLAG_2_RBV.B12 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, $(DEV):TEMP_LOW_LIM_RBV)
{
    field(DESC,"something")
    field(INP, "$(DEV):ALARM_FLAG_2_RBV.B13 NPP NMS")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(ai, $(DEV):OUT_RATIO_RAW_RBV)
{       
        field(DESC, "Raw output ratio data")
        field(DTYP, "asynInt32")
        field(INP, "@asyn(THERMOCON$(N)_read_reg,6)UINT16")
        field(VAL, "0")
}
 
record(calc, $(DEV):OUT_RATIO_RBV)
{
        field(DESC, "Output ratio from -100% to 100%")
        field(INPA, "$(DEV):OUT_RATIO_RAW_RBV PP NMS")
        field(SCAN, "2 second")
        field(CALC, "A&32768?-1*((~A) + 1):A")
	    field(EGU, "%")
}

record(mbbi, $(DEV):CTRL_OP_RBV)
{
    field(DESC, "Operation mode read back")
    field(DTYP,"asynUInt32Digital")
    field(INP,"@asynMask(THERMOCON$(N)_read_reg,0,0x0007)UINT16")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(ZRST, "Pump stop")
    field(ONST, "Normal operation")
    field(TWST, "Auto tuning start")
    field(THST, "Learning control")
    field(FRST, "External tune control")   
}

record(mbbo, $(DEV):CTRL_OP_SET)
{
    field(DESC, "Set operation mode")
    field(OMSL, "supervisory")
    field(DTYP,"asynUInt32Digital")
    field(OUT,"@asynMask(THERMOCON$(N)_set_reg,0,0x0007)UINT16")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(ZRST, "Pump stop")
    field(ONST, "Normal operation")
    field(TWST, "Auto tuning start")
    field(THST, "Learning control")
    field(FRST, "External tune control")   
}

record(ao, $(DEV):TARG_TEMP_SET)
{
    field(DESC, "Set target temp")
    field(OMSL, "supervisory")
    field(DRVL, "10.00")
    field(DRVH, "60.00")
    field(PREC, "4")
    field(EGU, "C")
    field(OUT, "$(DEV):TARG_TEMP_RAW.A PP NMS")
}
record(calcout, $(DEV):TARG_TEMP_RAW)
{
        field(DESC, "convert temp to device format")
        field(CALC, "A*100")
        field(OUT, "$(DEV):TARG_TEMP_RAW_SET PP NMS")
}
record(longout, $(DEV):TARG_TEMP_RAW_SET)
{
    field(DESC, "send temp in raw format to device")
    field(OMSL, "supervisory")
    field(DRVL, "1000")
    field(DRVH, "6000")
    field(DTYP,"asynInt32")
    field(OUT,"@asyn(THERMOCON$(N)_set_reg,1)UINT16")  
}
